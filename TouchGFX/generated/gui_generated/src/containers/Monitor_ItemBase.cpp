/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/Monitor_ItemBase.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

Monitor_ItemBase::Monitor_ItemBase() :
    buttonCallback(this, &Monitor_ItemBase::buttonCallbackHandler)
{
    setWidth(90);
    setHeight(120);
    posiProgress.setXY(2, 22);
    posiProgress.setProgressIndicatorPosition(0, 0, 86, 45);
    posiProgress.setRange(0, 4095);
    posiProgress.setCenter(43, 44);
    posiProgress.setRadius(50);
    posiProgress.setLineWidth(0);
    posiProgress.setStartEndAngle(-90, 90);
    posiProgress.setBackground(touchgfx::Bitmap(BITMAP_CIRCLE_INDICATOR_BG_LINE_HALF_ID));
    posiProgressPainter.setBitmap(touchgfx::Bitmap(BITMAP_CIRCLE_INDICATOR_FILL_LINE_HALF_ID));
    posiProgress.setPainter(posiProgressPainter);
    posiProgress.setValue(2048);

    posi.setPosition(0, 55, 90, 31);
    posi.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    posi.setLinespacing(0);
    Unicode::snprintf(posiBuffer, POSI_SIZE, "%s", touchgfx::TypedText(T_NUM_DEFAULT).getText());
    posi.setWildcard(posiBuffer);
    posi.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VZTJ));

    button1.setXY(2, 86);
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_ID_ID), touchgfx::Bitmap(BITMAP_ID_ID));
    button1.setAction(buttonCallback);

    id.setPosition(2, 91, 86, 25);
    id.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    id.setLinespacing(0);
    touchgfx::Unicode::snprintf(idBuffer1, IDBUFFER1_SIZE, "%s", touchgfx::TypedText(T_NUM_DEFAULT).getText());
    id.setWildcard1(idBuffer1);
    touchgfx::Unicode::snprintf(idBuffer2, IDBUFFER2_SIZE, "%s", touchgfx::TypedText(T_NUM_DEFAULT).getText());
    id.setWildcard2(idBuffer2);
    id.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V9I0));

    slot.setPosition(0, 0, 92, 25);
    slot.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    slot.setLinespacing(0);
    Unicode::snprintf(slotBuffer, SLOT_SIZE, "%s", touchgfx::TypedText(T_NUM_SMALL).getText());
    slot.setWildcard(slotBuffer);
    slot.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QU5N));

    add(posiProgress);
    add(posi);
    add(button1);
    add(id);
    add(slot);
}

void Monitor_ItemBase::initialize()
{

}

void Monitor_ItemBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
    {
        //chageViewSetting
        //When button1 clicked change screen to Screen2
        //Go to Screen2 with no screen transition
        application().gotoScreen2ScreenNoTransition();

        //callViewSetting
        //When button1 clicked call virtual function
        //Call callViewSetting
        callViewSetting();
    }
}

