/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MONITOR_ITEMBASE_HPP
#define MONITOR_ITEMBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/containers/progress_indicators/CircleProgress.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565Bitmap.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/Button.hpp>

class Monitor_ItemBase : public touchgfx::Container
{
public:
    Monitor_ItemBase();
    virtual ~Monitor_ItemBase() {}
    virtual void initialize();

    /*
     * Virtual Action Handlers
     */
    virtual void callViewSetting()
    {
        // Override and implement this function in Monitor_Item
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::CircleProgress posiProgress;
    touchgfx::PainterRGB565Bitmap posiProgressPainter;
    touchgfx::TextArea posi;
    touchgfx::Button button1;
    touchgfx::TextArea id;
    touchgfx::TextArea slot;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Monitor_ItemBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // MONITOR_ITEMBASE_HPP
